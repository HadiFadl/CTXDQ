// Create base measures
CREATE (:BaseMeasure {name: 'Missing Values'});
CREATE (:BaseMeasure {name: 'Data Inconsistency'});
CREATE (:BaseMeasure {name: 'Null Count'});
CREATE (:BaseMeasure {name: 'Data Entry Error'});
CREATE (:BaseMeasure {name: 'Outliers Detection'});
CREATE (:BaseMeasure {name: 'Data Comparison'});
CREATE (:BaseMeasure {name: 'Cross-Field Validation'});
CREATE (:BaseMeasure {name: 'Range Check'});
CREATE (:BaseMeasure {name: 'Duplication Check'});
CREATE (:BaseMeasure {name: 'Format Validity'});

// Create quality dimensions
CREATE (:QualityDimension {name: 'Completeness'});
CREATE (:QualityDimension {name: 'Correctness'});
CREATE (:QualityDimension {name: 'Currency'});
CREATE (:QualityDimension {name: 'Consistency'});
CREATE (:QualityDimension {name: 'Accessibility'});
CREATE (:QualityDimension {name: 'Availability'});
CREATE (:QualityDimension {name: 'Accuracy'});
CREATE (:QualityDimension {name: 'Interpretability'});
CREATE (:QualityDimension {name: 'Relevance'});
CREATE (:QualityDimension {name: 'Security'});
CREATE (:QualityDimension {name: 'Traceability'});
CREATE (:QualityDimension {name: 'Understandability'});
CREATE (:QualityDimension {name: 'Timeliness'});
CREATE (:QualityDimension {name: 'Usability'});


//Create BaseMeasure and QualityDimension
MATCH (context:DataContext {name: 'AI Generated Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'N/A'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Content'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'AI Generated Data', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.47}]->(context);
MATCH (context:DataContext {name: 'AI Generated Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'N/A'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Content'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'AI Generated Data', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.325}]->(context);
MATCH (context:DataContext {name: 'AI Generated Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'N/A'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Content'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'AI Generated Data', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.325}]->(context);
MATCH (context:DataContext {name: 'AI Generated Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'N/A'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Content'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'AI Generated Data', weight: 0.28}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.75}]->(context);
MATCH (context:DataContext {name: 'AI Generated Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'N/A'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Content'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'AI Generated Data', weight: 0.72}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.55}]->(context);
MATCH (context:DataContext {name: 'AI Generated Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'N/A'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Content'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'AI Generated Data', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.1}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CO2'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.82}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.235}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Timestamp'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.63}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.235}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Humidity'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.385}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PM10'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.385}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CO2'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.78}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CO'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.12}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.536667}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CO'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.536667}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Humidity'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.536667}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CO2'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.92}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.595}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CO2'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.595}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Timestamp'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.29}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.643333}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Timestamp'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.643333}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Temperature'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.643333}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CO2'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.26}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Humidity'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.48}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PM2.5'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.27}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.48}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Humidity'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.92}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.625}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.625}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CO2'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.91}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.29}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CO'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.85}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.54}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CO'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.58}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.54}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CO'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.603333}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CO2'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.603333}]->(context);
MATCH (context:DataContext {name: 'Air Quality'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Timestamp, Location, Temperature, Humidity, CO, CO2, PM2.5, PM10'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Temperature'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Quality', weight: 0.81}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.603333}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Status'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6275}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Purchase Date'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6275}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Departure Date'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.88}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6275}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Arrival Airport'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6275}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Class'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.661667}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Departure Airport'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.661667}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Purchase Date'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.63}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.661667}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Flight ID'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.66}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.661667}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Flight ID'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.661667}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Price'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.661667}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Flight ID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.393333}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Departure Airport'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.393333}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Class'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.393333}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Class'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.41}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3475}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Arrival Airport'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3475}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Ticket ID'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3475}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Passenger ID'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.66}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3475}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Status'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.75}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.89}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Departure Date'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Arrival Date'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.98}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Class'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Passenger ID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.61}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Price'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.21}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.445}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Arrival Date'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.445}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Arrival Airport'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.445}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Arrival Airport'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.64}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.445}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Status'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.58}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Flight ID'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.58}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Purchase Date'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.27}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.22}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Status'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.94}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Status'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.705}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Departure Date'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.56}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.705}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Seat Number'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Price'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.61}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.303333}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Price'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.303333}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Price'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.303333}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Passenger ID'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.703333}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Arrival Date'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.703333}]->(context);
MATCH (context:DataContext {name: 'Air Travel Ticketing System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tickets, Flights, Passengers, Reservations'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Arrival Date'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Air Travel Ticketing System', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.703333}]->(context);
MATCH (context:DataContext {name: 'Civil Records'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Birth Records, Marriage Records, Death Records'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Civil Records', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.86}]->(context);
MATCH (context:DataContext {name: 'Civil Records'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Birth Records, Marriage Records, Death Records'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Place of birth'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Civil Records', weight: 0.59}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3}]->(context);
MATCH (context:DataContext {name: 'Civil Records'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Birth Records, Marriage Records, Death Records'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Civil Records', weight: 0.49}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.32}]->(context);
MATCH (context:DataContext {name: 'Civil Records'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Birth Records, Marriage Records, Death Records'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Civil Records', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.568}]->(context);
MATCH (context:DataContext {name: 'Civil Records'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Birth Records, Marriage Records, Death Records'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Place of birth'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Civil Records', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.568}]->(context);
MATCH (context:DataContext {name: 'Civil Records'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Birth Records, Marriage Records, Death Records'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Place of birth'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Civil Records', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.568}]->(context);
MATCH (context:DataContext {name: 'Civil Records'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Birth Records, Marriage Records, Death Records'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Place of birth'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Civil Records', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.568}]->(context);
MATCH (context:DataContext {name: 'Civil Records'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Birth Records, Marriage Records, Death Records'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Parents names'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Civil Records', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.568}]->(context);
MATCH (context:DataContext {name: 'Civil Records'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Birth Records, Marriage Records, Death Records'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Civil Records', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.78}]->(context);
MATCH (context:DataContext {name: 'Civil Records'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Birth Records, Marriage Records, Death Records'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Parents occupations'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Civil Records', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.68}]->(context);
MATCH (context:DataContext {name: 'Civil Records'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Birth Records, Marriage Records, Death Records'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Place of birth'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Civil Records', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4}]->(context);
MATCH (context:DataContext {name: 'Civil Records'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Birth Records, Marriage Records, Death Records'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Civil Records', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.52}]->(context);
MATCH (context:DataContext {name: 'Civil Records'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Birth Records, Marriage Records, Death Records'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Civil Records', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.585}]->(context);
MATCH (context:DataContext {name: 'Civil Records'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Birth Records, Marriage Records, Death Records'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Parents ages'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Civil Records', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.585}]->(context);
MATCH (context:DataContext {name: 'Civil Records'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Birth Records, Marriage Records, Death Records'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Parents ages'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Civil Records', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.585}]->(context);
MATCH (context:DataContext {name: 'Civil Records'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Birth Records, Marriage Records, Death Records'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Parents ages'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Civil Records', weight: 0.29}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.585}]->(context);
MATCH (context:DataContext {name: 'Civil Records'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Birth Records, Marriage Records, Death Records'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Parents ages'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Civil Records', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.295}]->(context);
MATCH (context:DataContext {name: 'Civil Records'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Birth Records, Marriage Records, Death Records'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Place of birth'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Civil Records', weight: 0.63}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.295}]->(context);
MATCH (context:DataContext {name: 'Civil Records'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Birth Records, Marriage Records, Death Records'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Parents names'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Civil Records', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.915}]->(context);
MATCH (context:DataContext {name: 'Civil Records'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Birth Records, Marriage Records, Death Records'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Birthdate'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Civil Records', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.915}]->(context);
MATCH (context:DataContext {name: 'Civil Records'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Birth Records, Marriage Records, Death Records'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Parents occupations'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Civil Records', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.28}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient ID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.91}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.695}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Device Usage Data'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.695}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Diagnosis'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.437778}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Medical Device ID'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.437778}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Laboratory Results'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.437778}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient ID'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.76}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.437778}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Age'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.437778}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Adverse Events'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.437778}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Race/Ethnicity'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.437778}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Vital Signs'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.437778}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Vital Signs'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.437778}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Adverse Events'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.85}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.54}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Medical Device ID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.91}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.54}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Medications'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.54}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Medications'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.54}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Diagnosis'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.76}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.54}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.81}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.37}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Laboratory Results'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.37}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Adverse Events'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.17}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.37}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Age'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.37}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Medical History'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.37}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.37}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Diagnosis'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.82}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.37}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Diagnosis'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.37}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.81}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.454}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Age'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.454}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Adverse Events'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.454}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Adverse Events'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.26}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.454}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Treatment Regimen'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.454}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Age'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.72}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.72}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Diagnosis'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.17}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.64}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Age'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.64}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Vital Signs'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.64}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Race/Ethnicity'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.72}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.64}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Race/Ethnicity'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.64}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Medical History'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.596667}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Medications'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.11}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.596667}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient ID'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.596667}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient ID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.72}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.48}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Medical Device ID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.48}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Diagnosis'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.48}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.48}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Diagnosis'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.595}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Vital Signs'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.95}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.595}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.26}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.26}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Diagnosis'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.385}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Medical History'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.385}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient ID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.385}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient ID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.385}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Race/Ethnicity'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.67}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'Clinical Trial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Treatments, Adverse Events'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Adverse Events'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Clinical Trial', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BillingAddress'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.47}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.561333}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BillingAddress'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.561333}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BillingCity'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.561333}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BillingCity'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.561333}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BillingCity'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.561333}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ShippingAddress'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.561333}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PostalCode'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.561333}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OpportunityID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.561333}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OpportunityID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.561333}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OpportunityID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.561333}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OpportunityID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.61}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.561333}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'LastName'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.561333}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Website'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.33}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.561333}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Website'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.64}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.561333}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Employees'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.561333}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Employees'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.532857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Industry'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.532857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Name'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.39}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.532857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Name'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.532857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PostalCode'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.34}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.532857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Probability'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.532857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DateCreated'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.23}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.532857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ShippingCity'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.28}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.58375}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ShippingCity'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.58375}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BillingState'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.58375}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Name'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.58375}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OpportunityID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.58375}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Industry'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.58375}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Website'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.76}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.58375}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'FirstName'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.58375}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Email'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.412857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Fax'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.412857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Probability'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.412857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PostalCode'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.412857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Phone'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.412857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BillingAddress'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.41}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.412857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'City'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.61}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.412857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'AccountID'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.412857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Amount'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.412857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ContactID'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.412857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Country'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.28}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.412857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ShippingPostalCode'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.412857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ShippingState'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.49}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.412857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Stage'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.63}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.412857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Stage'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.39}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.458462}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ShippingState'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.458462}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ShippingAddress'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.458462}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'State'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.31}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.458462}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DateCreated'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.458462}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Country'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.458462}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Country'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.49}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.458462}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BillingAddress'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.458462}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BillingPostalCode'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.458462}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BillingPostalCode'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.61}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.458462}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Fax'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.61}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.458462}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'FirstName'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.86}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.458462}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Industry'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.458462}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Email'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.77}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.467143}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Employees'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.467143}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Employees'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.22}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.467143}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BillingState'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.467143}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BillingState'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.467143}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BillingState'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.17}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.467143}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ShippingCountry'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.36}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.467143}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ShippingState'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.54}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BillingState'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.41}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.54}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BillingPostalCode'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.54}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'AccountID'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.54}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Employees'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.54}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OpportunityID'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.19}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'AccountID'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.19}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ShippingCity'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.26}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'State'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Description'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerID'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.93}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OpportunityID'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Phone'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Employees'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.95}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'FirstName'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'LastName'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OpportunityID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.58}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.505}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Name'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.505}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DateCreated'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.505}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ShippingAddress'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.16}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.505}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'AccountID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.505}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Amount'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.67}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.505}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BillingCity'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.505}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BillingCity'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.505}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BillingAddress'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.292857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BillingState'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.292857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'State'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.292857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PostalCode'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.292857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'LeadID'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.92}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.292857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Website'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.292857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Description'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.292857}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Employees'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.555}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'LastName'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.555}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'State'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.555}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerID'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.555}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BillingCountry'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.555}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CloseDate'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.555}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CloseDate'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.49}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.555}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Amount'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.555}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Amount'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.608}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'AccountID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.608}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BillingPostalCode'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.608}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Fax'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.608}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OpportunityID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.608}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BillingCity'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.515}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CloseDate'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.18}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.515}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Address'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.515}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ShippingCity'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.86}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.515}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ShippingCountry'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.515}]->(context);
MATCH (context:DataContext {name: 'CRM'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Contacts, Opportunities, Leads, Accounts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ShippingCountry'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'CRM', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.515}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient ID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.29}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.651429}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient ID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.651429}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient name'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.651429}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge date'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.651429}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge diagnoses'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.651429}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge provider name'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.651429}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge provider name'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.77}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.651429}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient ID'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.73}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.91}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient name'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.532857}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient name'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.532857}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge diagnoses'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.532857}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge summary text'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.57}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.532857}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge provider name'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.532857}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge date'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.532857}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge date'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.532857}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge diagnoses'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge medications'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.22}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge summary text'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Follow-up instructions'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient name'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.305}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient ID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.11}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.305}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient ID'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6125}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient name'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.56}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6125}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Follow-up instructions'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6125}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge diagnoses'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.61}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6125}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge medications'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.485}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient ID'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.485}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge medications'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.2}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge diagnoses'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.37}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.485}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Follow-up instructions'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.44}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.485}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Follow-up instructions'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.18}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.57}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge medications'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.57}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge provider name'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.91}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.57}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge provider name'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5625}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge provider name'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5625}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Follow-up instructions'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5625}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient ID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5625}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Follow-up instructions'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.64}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.552}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge diagnoses'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.27}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.552}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge date'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.44}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.552}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge summary text'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.552}]->(context);
MATCH (context:DataContext {name: 'Discharge Summaries'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, Hospital course, Discharge medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Discharge summary text'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Discharge Summaries', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.552}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'LastName'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.406667}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PaymentDate'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.57}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.406667}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PaymentMethod'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.406667}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PaymentDate'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.63}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.51875}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PaymentDate'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.56}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.51875}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Status'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.51875}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TotalAmount'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.12}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.51875}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Amount'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.51875}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductID'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.51875}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductID'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.66}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.51875}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.59}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.51875}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.343333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Address'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.343333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TotalAmount'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.18}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.343333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TotalAmount'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.343333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Rating'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.343333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.13}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.343333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'LastName'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.61}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ReviewID'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.61}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ReviewID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.21}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.673333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Rating'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.57}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.673333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Quantity'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.673333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Status'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.16}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.673333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Status'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.57}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.673333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.673333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.673333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductName'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.673333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.86}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.673333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'LastName'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.673333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'LastName'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.673333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'FirstName'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.66}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.673333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.673333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderDate'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.31}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.673333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Price'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.673333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Price'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.590833}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Price'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.590833}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PaymentMethod'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.22}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.590833}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.590833}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.590833}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductName'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.590833}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Description'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.590833}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Status'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.73}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.590833}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Status'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.590833}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TotalAmount'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.590833}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Quantity'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.590833}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Quantity'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.75}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.590833}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ReviewID'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.446}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TotalAmount'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.446}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TotalAmount'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.446}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Description'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.41}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.446}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderDate'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.39}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.446}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PaymentMethod'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.69}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PaymentDate'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.52}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.69}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PaymentID'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.29}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.69}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'FirstName'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.66}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.69}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Description'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.69}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Description'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.562}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductID'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.562}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PaymentMethod'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.562}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PaymentMethod'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.562}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderDate'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.562}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.27}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.413333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.413333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PaymentMethod'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.57}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.413333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PaymentMethod'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.413333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'FirstName'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.37}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.413333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Email'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.413333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'LastName'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.413333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'LastName'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.413333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Amount'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.413333}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Address'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.23}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565714}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductName'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.18}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565714}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TotalAmount'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565714}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Quantity'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565714}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'LastName'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565714}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PaymentMethod'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.92}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565714}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PaymentDate'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565714}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderID'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.18}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.43125}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'LastName'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.43125}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'LastName'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.43125}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Email'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.43125}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TotalAmount'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.88}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.43125}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerID'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.85}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.43125}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.12}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.43125}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Amount'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.43125}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.514667}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.31}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.514667}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.76}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.514667}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.514667}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductName'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.514667}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Description'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.85}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.514667}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ReviewID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.22}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.514667}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Email'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.514667}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Email'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.514667}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'FirstName'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.514667}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.57}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.514667}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.514667}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PaymentMethod'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.76}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.514667}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PaymentID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.81}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.514667}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PaymentMethod'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.514667}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PaymentID'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.64}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.655556}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PaymentDate'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.27}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.655556}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PaymentID'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.655556}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PaymentMethod'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.44}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.655556}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'LastName'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.655556}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'LastName'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.64}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.655556}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.655556}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.655556}]->(context);
MATCH (context:DataContext {name: 'E-commerce'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Customers, Reviews, Payments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'E-commerce', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.655556}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CourseLevel'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.458}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CourseLevel'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.458}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'StudentName'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.458}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DateOfBirth'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.93}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.458}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Grade'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.458}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Grade'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.72}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6425}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Phone'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6425}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'StudentName'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.82}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6425}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CourseID'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.91}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6425}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CourseID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.74}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DateOfBirth'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.74}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Phone'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.62}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.74}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Email'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.74}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'GraduationDate'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.86}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3025}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Phone'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3025}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Phone'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3025}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'StudentID'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3025}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CourseID'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3025}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CourseLevel'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3025}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CourseCredit'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3025}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Address'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.56}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3025}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CourseCredit'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.26}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.464286}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CourseDescription'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.31}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.464286}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CourseName'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.464286}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'StudentName'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.75}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.464286}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TeacherName'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.464286}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'GraduationDate'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.464286}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'GradeDate'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.464286}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'GraduationDate'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.72}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.691667}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HireDate'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.691667}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TeacherName'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.691667}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TeacherID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.691667}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CourseID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.58}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.691667}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CourseCredit'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.691667}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CourseName'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.576667}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CourseLevel'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.576667}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DateOfBirth'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.576667}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'StudentID'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.39}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.463333}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TeacherName'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.67}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.463333}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HireDate'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.47}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.463333}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.463333}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.463333}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.33}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.463333}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Grade'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.665714}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Grade'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.665714}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HireDate'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.56}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.665714}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'EnrollmentDate'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.665714}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'StudentName'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.52}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.665714}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'StudentName'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.82}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.665714}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CourseLevel'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.665714}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CourseLevel'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.464286}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Address'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.464286}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'StudentName'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.77}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.464286}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'StudentID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.18}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.464286}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'StudentID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.464286}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'StudentID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.44}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.464286}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'GradeDate'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.464286}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HireDate'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.11}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.82}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Email'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.22}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.82}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Phone'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.33}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.82}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CourseName'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.82}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CourseLevel'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.594}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'StudentID'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.28}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.594}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Email'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.594}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HireDate'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.594}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.594}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'GradeDate'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.513333}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'EnrollmentDate'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.92}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.513333}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Phone'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.44}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.513333}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Phone'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.513333}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'StudentID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.18}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.513333}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'StudentName'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.22}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.513333}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TeacherID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.513333}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TeacherName'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.47}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.513333}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CourseName'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.513333}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CourseCredit'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.38}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TeacherID'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.38}]->(context);
MATCH (context:DataContext {name: 'Education'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Grades'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Phone'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Education', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.38}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Email'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.588571}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Height'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.588571}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Lab Results'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.22}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.588571}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Medications'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.17}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.588571}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Imaging Results'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.588571}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Symptoms'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.588571}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Treatment'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.62}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.588571}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Address'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.81}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5375}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Imaging Results'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.34}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5375}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Weight'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5375}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Weight'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5375}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Weight'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Height'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Email'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient Name'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient ID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Blood Type'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Blood Type'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.453333}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Symptoms'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.95}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.453333}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Email'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.63}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.453333}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Height'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.453333}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Weight'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.75}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.453333}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Medical History'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.23}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.453333}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Weight'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.86}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.643333}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient Name'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.52}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.643333}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Phone Number'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.643333}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Phone Number'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.643333}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Phone Number'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.643333}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Phone Number'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.643333}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient ID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.675}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Medical History'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.675}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Lab Results'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.675}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Treatment'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.675}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Allergies'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.11}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.68}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Medical History'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.34}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.68}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Imaging Results'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.76}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.68}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Email'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.708}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Email'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.18}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.708}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Phone Number'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.708}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Allergies'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.54}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.708}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Address'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.708}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient Name'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.56}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.615}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Lab Results'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.615}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.37}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.52}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.445714}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Weight'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.445714}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Weight'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.445714}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Address'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.445714}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Address'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.445714}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Treatment'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.76}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.445714}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Symptoms'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.445714}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Weight'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.81}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.655}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.18}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.655}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Diagnosis'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.655}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Diagnosis'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.23}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.655}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Weight'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.13}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.73}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient ID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.73}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Patient Name'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7175}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Phone Number'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.47}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7175}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Medical History'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7175}]->(context);
MATCH (context:DataContext {name: 'EMR'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patient demographics, clinical observations, laboratory results, imaging data'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Symptoms'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'EMR', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7175}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Transmission time'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.43}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Amount generated'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.43}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Amount distributed'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.27}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.43}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.43}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.12}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.525}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Distribution time'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.525}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'From location'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.525}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Amount consumed'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.61}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.525}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Consumption time'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.61}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.435}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Consumption time'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.435}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Transmission time'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.435}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Generation time'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.57}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.435}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'From location'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.695}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Amount consumed'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.695}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Amount transmitted'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.695}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Amount generated'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.695}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Consumption time'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.63}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5075}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Consumption date'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.56}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5075}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Transmission date'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5075}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Distribution date'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5075}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Distribution time'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.66}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Transmission time'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.66}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'To location'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5625}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Consumption date'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.85}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5625}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Power source'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5625}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Power source'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5625}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Amount generated'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.496667}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Amount distributed'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.496667}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Transmission time'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.496667}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'To location'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.59}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.38}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Amount distributed'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.76}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.38}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Distribution time'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.23}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.38}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'From location'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.38}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Generation time'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.72}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.505}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Generation date'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.505}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Amount distributed'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.505}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Transmission time'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.505}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Distribution date'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.16}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.266667}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Distribution time'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.73}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.266667}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Power source'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.266667}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Power source'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.592857}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Distribution time'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.592857}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Generation date'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.26}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.592857}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Transmission date'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.592857}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Amount transmitted'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.592857}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Amount generated'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.592857}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Amount transmitted'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.592857}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Amount transmitted'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.705}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Amount distributed'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.705}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Consumption date'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.705}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Transmission date'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.705}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Transmission date'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.56}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.502}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Transmission date'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.502}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Generation time'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.502}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Generation time'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.49}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.502}]->(context);
MATCH (context:DataContext {name: 'Energy'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Power generation, Transmission, Distribution, Consumption'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Energy', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.502}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MovieID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.66}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.45}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TVShowID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.45}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.45}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BirthDate'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.88}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.78}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Genre'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.78}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'FirstName'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.78}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MovieID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.26}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.436667}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TVShowID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.436667}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Rating'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.41}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.436667}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'RatingID'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.82}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.764}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TVShowID'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.58}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.764}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BirthDate'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.764}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.764}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.56}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.764}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DirectorID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.37}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.482}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MovieID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.482}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TVShowID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.31}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.482}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CreatorID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.17}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.482}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Rating'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.482}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'RatingID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.23}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.661667}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'RatingID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.661667}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'RatingValue'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.661667}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.661667}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MovieID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.11}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.661667}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Genre'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.661667}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Genre'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.552}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'FirstName'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.552}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TVShowID'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.17}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.552}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Rating'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.552}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Title'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.552}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'RatingValue'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.86}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CreatorID'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'FirstName'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.33}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.666}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Rating'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.666}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'RatingID'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.12}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.666}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserID'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.666}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserID'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.666}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TVShowID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.98}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BirthDate'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MovieID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MovieID'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.18}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.718571}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.57}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.718571}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'LastName'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.718571}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'BirthDate'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.72}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.718571}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TVShowID'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.91}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.718571}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Rating'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.718571}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Rating'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.93}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.718571}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserID'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.61}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ActorID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.665}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'FirstName'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.665}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'FirstName'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.85}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.473333}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.473333}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MovieID'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.473333}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MovieID'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.17}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.473333}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Title'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.88}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.473333}]->(context);
MATCH (context:DataContext {name: 'Entertainment'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Movies, TV shows, Ratings, Actors, Directors'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Title'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Entertainment', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.473333}]->(context);
MATCH (context:DataContext {name: 'Environmental Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Air Quality, Noise Level'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Noise Level'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Environmental Monitoring', weight: 0.85}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565}]->(context);
MATCH (context:DataContext {name: 'Environmental Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Air Quality, Noise Level'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Noise Level'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Environmental Monitoring', weight: 0.66}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565}]->(context);
MATCH (context:DataContext {name: 'Environmental Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Air Quality, Noise Level'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Temperature'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Environmental Monitoring', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.645}]->(context);
MATCH (context:DataContext {name: 'Environmental Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Air Quality, Noise Level'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Air Quality'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Environmental Monitoring', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.645}]->(context);
MATCH (context:DataContext {name: 'Environmental Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Air Quality, Noise Level'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Temperature'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Environmental Monitoring', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.1}]->(context);
MATCH (context:DataContext {name: 'Environmental Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Air Quality, Noise Level'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Temperature'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Environmental Monitoring', weight: 0.18}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.523333}]->(context);
MATCH (context:DataContext {name: 'Environmental Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Air Quality, Noise Level'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Temperature'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Environmental Monitoring', weight: 0.62}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.523333}]->(context);
MATCH (context:DataContext {name: 'Environmental Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Air Quality, Noise Level'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Air Quality'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Environmental Monitoring', weight: 0.66}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.523333}]->(context);
MATCH (context:DataContext {name: 'Environmental Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Air Quality, Noise Level'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Humidity'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Environmental Monitoring', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.14}]->(context);
MATCH (context:DataContext {name: 'Environmental Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Air Quality, Noise Level'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Noise Level'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Environmental Monitoring', weight: 0.91}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.75}]->(context);
MATCH (context:DataContext {name: 'Environmental Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Air Quality, Noise Level'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Noise Level'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Environmental Monitoring', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.725}]->(context);
MATCH (context:DataContext {name: 'Environmental Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Air Quality, Noise Level'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Noise Level'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Environmental Monitoring', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.725}]->(context);
MATCH (context:DataContext {name: 'Environmental Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Air Quality, Noise Level'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Humidity'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Environmental Monitoring', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.725}]->(context);
MATCH (context:DataContext {name: 'Environmental Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Air Quality, Noise Level'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Humidity'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Environmental Monitoring', weight: 0.73}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.725}]->(context);
MATCH (context:DataContext {name: 'Environmental Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Air Quality, Noise Level'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Humidity'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Environmental Monitoring', weight: 0.61}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.725}]->(context);
MATCH (context:DataContext {name: 'Environmental Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Air Quality, Noise Level'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Humidity'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Environmental Monitoring', weight: 0.63}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.725}]->(context);
MATCH (context:DataContext {name: 'Environmental Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Air Quality, Noise Level'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Air Quality'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Environmental Monitoring', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.76}]->(context);
MATCH (context:DataContext {name: 'Environmental Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Air Quality, Noise Level'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Air Quality'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Environmental Monitoring', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.76}]->(context);
MATCH (context:DataContext {name: 'Environmental Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Air Quality, Noise Level'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Temperature'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Environmental Monitoring', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.28}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.16}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.703333}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductName'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.703333}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.28}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.703333}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductDescription'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.21}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.64}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TotalAmount'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.17}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.64}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Quantity'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.64}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerEmail'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.64}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerAddress'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.441667}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerName'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.91}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.441667}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TotalAmount'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.441667}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductDescription'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.441667}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Contact Email'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.441667}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.28}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.441667}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'InvoiceID'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.56}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductDescription'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.56}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductName'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.56}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TotalAmount'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.37}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.56}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TotalAmount'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.12}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.56}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerName'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.91}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.56}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerPhone'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.39}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TotalAmount'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.39}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.39}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderDate'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.39}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductDescription'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.64}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.644}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.37}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.644}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.56}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.644}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductPrice'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.86}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.644}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerAddress'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.77}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.644}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerID'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.392857}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerName'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.18}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.392857}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerName'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.392857}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Quantity'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.26}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.392857}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductID'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.392857}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductDescription'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.11}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.392857}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderDate'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.392857}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderID'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.373333}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductName'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.373333}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductName'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.27}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.373333}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerName'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.415}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderDate'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.415}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerName'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.66}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.476667}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.27}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.476667}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Contact Email'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.85}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.476667}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductID'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6725}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerEmail'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6725}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderID'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.23}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6725}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderID'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.13}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6725}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderDate'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.76}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerID'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.86}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.76}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerName'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.76}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Contact Email'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.76}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductName'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.42}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerName'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.91}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.42}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerEmail'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.42}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerEmail'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.42}]->(context);
MATCH (context:DataContext {name: 'ERP'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Customers, Products, Orders, Invoices, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Contact Email'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'ERP', weight: 0.27}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.76}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'comments'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.324}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'timestamp'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.324}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'post_id'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.92}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.324}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'interests'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.22}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.324}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'interests'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.324}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'comments'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.13}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.486667}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'content'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.486667}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'content'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.486667}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'timestamp'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.33}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.523333}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'location'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.523333}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'education'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.39}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.523333}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'name'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.45}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'user_id'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.57}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.45}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'age'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.45}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'age'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.563333}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'relationship_status'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.563333}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'post_id'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.563333}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'post_id'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.486667}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'post_id'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.486667}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'timestamp'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.486667}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'relationship_status'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.76}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'name'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.76}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'interests'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.85}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.445}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'user_id'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.59}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.445}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'post_id'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.81}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.16}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'post_id'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.73}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.505}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'education'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.22}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.505}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'user_id'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.72}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.505}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'content'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.52}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.505}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'age'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.44}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'user_id'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.44}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'relationship_status'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.81}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.44}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'education'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.44}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'location'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.59}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.44}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'name'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.44}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'likes'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5425}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'interests'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.33}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5425}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'education'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5425}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'age'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.37}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5425}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'interests'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.68}]->(context);
MATCH (context:DataContext {name: 'Facebook'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'likes'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Facebook', weight: 0.77}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.68}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'AccountCloseDate'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.712}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TransactionDate'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.64}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.712}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerEmail'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.712}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.92}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.712}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerName'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.77}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.712}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerName'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.62}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7475}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerPhoneNumber'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.88}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7475}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerEmail'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.26}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7475}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TransactionID'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7475}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TransactionType'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.92}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7475}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'AccountOpenDate'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7475}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'AccountID'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7475}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'AccountID'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.66}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7475}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'AccountCloseDate'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.57}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.606}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TransactionDate'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.73}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.606}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerEmail'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.56}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.606}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerPhoneNumber'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.606}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.606}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerAddress'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.65}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TransactionID'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.65}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'AccountType'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.65}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TransactionID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.57}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TransactionDate'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.67}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.57}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerAddress'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.77}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.57}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.348333}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.348333}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerName'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.348333}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerPhoneNumber'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.16}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.348333}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TransactionDate'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.348333}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'AccountBalance'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.348333}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'AccountType'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.905}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TransactionID'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.61}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.905}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TransactionType'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.596}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TransactionAmount'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.56}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.596}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerPhoneNumber'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.91}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.596}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerAddress'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.596}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'AccountOpenDate'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.596}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerEmail'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.75}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.556}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerName'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.63}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.556}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerName'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.556}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TransactionDate'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.556}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TransactionDate'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.47}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.556}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TransactionDate'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.47}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5675}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TransactionType'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.39}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5675}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.98}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5675}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'AccountID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5675}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'AccountBalance'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.555}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerPhoneNumber'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.44}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.555}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerAddress'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.555}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TransactionDate'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.11}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.555}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TransactionType'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7525}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerAddress'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7525}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'AccountBalance'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.64}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7525}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'AccountCloseDate'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.21}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7525}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'AccountID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.645714}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerAddress'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.645714}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerEmail'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.29}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.645714}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.645714}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerEmail'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.645714}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TransactionAmount'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.88}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.645714}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TransactionType'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.73}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.645714}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TransactionDate'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3975}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TransactionDate'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3975}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TransactionType'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3975}]->(context);
MATCH (context:DataContext {name: 'Financial'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Transactions, Accounts, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'AccountOpenDate'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Financial', weight: 0.64}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3975}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Volume'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.618}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Volume'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.618}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Currency Pair'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.618}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Trade Time'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.17}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.618}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Low Price'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.92}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.618}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Low Price'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.362}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Last Price'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.362}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Currency Pair'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.362}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Bid Price'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.362}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Ask Price'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.93}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.362}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Volume'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.29}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.33}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'High Price'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.33}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Last Price'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.31}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.665}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Bid Price'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.13}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.665}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Bid Price'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.47}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Low Price'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.47}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Low Price'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Volume'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Volume'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Bid Price'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.27}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.433333}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Low Price'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.433333}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Low Price'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.28}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.433333}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Low Price'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'High Price'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Trade Time'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.84}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Trade Time'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Volume'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.37}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Currency Pair'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Ask Price'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'High Price'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'High Price'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.47}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Low Price'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.47}]->(context);
MATCH (context:DataContext {name: 'Forex Trading'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Currency prices, exchange rates'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'High Price'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Forex Trading', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.38}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Email'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.28}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5875}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Name'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5875}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Bio'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5875}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommittedDate'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5875}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommitID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.52}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5875}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommitID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.82}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5875}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5875}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UpdatedAt'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5875}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Deletions'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.23}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5875}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Stars'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.81}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5875}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Stars'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5875}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PublicRepos'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5875}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'RepoID'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.653333}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'State'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.653333}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'State'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.653333}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.653333}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Email'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.23}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.653333}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'JoinDate'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.653333}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Followers'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.54}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5575}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Bio'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5575}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Bio'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5575}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Username'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5575}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserID'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.34}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.551818}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Deletions'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.551818}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'RepoID'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.551818}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Size'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.551818}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comments'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.551818}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comments'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.31}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.551818}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Followers'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.551818}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Forks'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.551818}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Insertions'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.551818}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueID'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.12}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.551818}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Message'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.551818}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Insertions'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.490667}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Insertions'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.16}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.490667}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.490667}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Description'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.490667}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommittedDate'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.490667}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Body'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.490667}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Size'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.490667}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'RepoID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.33}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.490667}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PublicGists'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.18}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.490667}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PublicGists'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.490667}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.490667}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UpdatedAt'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.41}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.490667}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Username'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.36}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.490667}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Username'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.93}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.490667}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UpdatedAt'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.490667}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Username'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.725}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Username'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.725}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Deletions'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.725}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Size'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.61}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.725}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PublicGists'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.431429}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'State'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.17}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.431429}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserID'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.431429}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Bio'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.431429}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CreatedAt'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.431429}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Language'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.431429}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Insertions'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.431429}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6125}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Followers'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.28}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6125}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommittedDate'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.37}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6125}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comments'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.66}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6125}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Username'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6125}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PublicRepos'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6125}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PublicRepos'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6125}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PublicRepos'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.66}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6125}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommitID'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5275}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.86}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5275}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Insertions'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.85}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5275}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Insertions'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5275}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.483333}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Followers'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.483333}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Bio'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.483333}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommitID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.82}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.483333}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comments'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.483333}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PublicGists'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.37}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.483333}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PublicGists'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.483333}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Stars'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.483333}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'RepoID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.16}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.483333}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.483333}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.28}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.483333}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UpdatedAt'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.483333}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'RepoID'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4525}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Size'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4525}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PublicGists'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4525}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Stars'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4525}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Stars'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4525}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommittedDate'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.64}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4525}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Forks'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4525}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4525}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Insertions'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.536}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueID'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.39}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.536}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueID'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.536}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Followers'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.536}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Followers'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.34}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.536}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Description'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.81}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.536}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommittedDate'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.536}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommitID'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.536}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Bio'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.72}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.536}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PublicRepos'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.85}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.536}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PublicGists'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.275}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PullRequestID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.275}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.275}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Name'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.91}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.275}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Message'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Insertions'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Language'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CreatedAt'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CreatedAt'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.44}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PullRequestID'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PublicGists'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Size'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserID'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserID'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.23}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserID'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.29}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5}]->(context);
MATCH (context:DataContext {name: 'GitHub'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Repositories, Issues, Pull Requests, Commits'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Username'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitHub', weight: 0.88}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserName'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.56}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4025}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4025}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectDescription'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4025}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectDescription'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.37}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4025}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestStatus'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4025}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestUpdatedAt'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.58}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4025}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssuePriority'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.49}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4025}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueAssignee'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4025}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssuePriority'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.63}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5575}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueReporter'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5575}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueReporter'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5575}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestStatus'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5575}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestCreatedAt'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5575}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueStatus'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.39}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5575}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectCreationDate'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.61}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5575}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectDescription'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5575}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectOwner'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5575}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommitCreatedAt'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5575}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommitMessage'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.33}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5575}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserName'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.29}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5575}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.653333}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectName'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.653333}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueStatus'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.75}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.653333}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestDescription'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.653333}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestAssignee'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.653333}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.653333}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestStatus'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.653333}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.73}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.653333}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueDescription'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.653333}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueStatus'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.22}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.533333}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestTitle'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.533333}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestAssignee'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.77}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.533333}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueType'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.533333}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectID'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.533333}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserName'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.98}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.533333}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserCreatedAt'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.48}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectDescription'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.48}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectDescription'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.48}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueUpdatedAt'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.48}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestAuthor'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.34}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.48}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestStatus'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.27}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.48}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestStatus'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.48}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueCreatedAt'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.48}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueAssignee'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.18}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5125}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueCreatedAt'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.81}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5125}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueReporter'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5125}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestTitle'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5125}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestUpdatedAt'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5125}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.31}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5125}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueTitle'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5125}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueType'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5125}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueTitle'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5125}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectCreationDate'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5125}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectDescription'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5125}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserName'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5125}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserName'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.82}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.384286}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectCreationDate'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.384286}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommitCreatedAt'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.17}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.384286}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommitID'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.384286}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueUpdatedAt'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.384286}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestDescription'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.384286}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueCreatedAt'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.384286}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueCreatedAt'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.48}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestAssignee'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.48}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommitCreatedAt'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.66}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.48}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectID'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.48}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserCreatedAt'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.48}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectName'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.76}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.531538}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectID'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.41}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.531538}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectURL'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.531538}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectURL'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.82}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.531538}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectDescription'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.531538}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestStatus'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.531538}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestUpdatedAt'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.531538}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestTitle'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.531538}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestTitle'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.531538}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueTitle'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.58}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.531538}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueReporter'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.531538}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueReporter'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.531538}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestTitle'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.36}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.531538}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueReporter'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.734}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueReporter'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.18}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.734}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueDescription'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.36}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.734}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueTitle'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.75}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.734}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserCreatedAt'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.734}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectDescription'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.45625}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectCreationDate'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.29}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.45625}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectID'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.63}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.45625}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommitID'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.18}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.45625}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommitAuthor'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.16}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.45625}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommitMessage'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.45625}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestStatus'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.45625}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestTitle'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.45625}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MergeRequestDescription'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.72}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.687778}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueTitle'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.687778}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueStatus'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.41}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.687778}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommitCommitter'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.687778}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommitCreatedAt'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.17}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.687778}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectName'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.687778}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectOwner'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.88}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.687778}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectCreationDate'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.687778}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserID'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.687778}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.54}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.498}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectURL'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.498}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommitMessage'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.498}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommitMessage'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.498}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommitMessage'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.498}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueStatus'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.498}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueDescription'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.498}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueDescription'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.498}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueStatus'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.498}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueTitle'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.498}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueTitle'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.524545}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueReporter'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.524545}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueID'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.57}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.524545}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssuePriority'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.524545}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommitID'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.524545}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommitCreatedAt'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.47}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.524545}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectURL'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.524545}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectDescription'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.524545}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectCreationDate'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.88}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.524545}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserEmail'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.524545}]->(context);
MATCH (context:DataContext {name: 'GitLab'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Projects, Issues, Merge Requests, Commits, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserCreatedAt'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GitLab', weight: 0.73}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.524545}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Risk Description'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.42}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Risk Description'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.22}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.42}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Test Date'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.42}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Test Result'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.67}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.42}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'External Source Comments'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.18}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.42}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'External Source Comments'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.23}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.42}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'External Source Date'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.42}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'External Source Date'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.591667}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'External Source Comments'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.591667}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Entity Type'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.591667}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Resolved Date'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.76}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.591667}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Description'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.591667}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Reported By'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.591667}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Test Plan'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.591667}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Test Date'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.591667}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Compliance Test Result'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.591667}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Compliance Standard'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.591667}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Compliance Test Date'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.34}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.591667}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Risk Description'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.91}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.591667}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Compliance Requirement'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.396667}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Test Comments'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.396667}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Reported By'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.396667}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue ID'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.321667}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Reported Date'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.321667}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Reported Date'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.321667}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Resolution Comments'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.321667}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Owner'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.321667}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Compliance Test Date'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.321667}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Compliance Test Date'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.687143}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Compliance Test Comments'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.31}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.687143}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Test Comments'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.687143}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Risk Description'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.57}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.687143}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue ID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.67}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.687143}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Status'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.687143}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'External Source Date'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.687143}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Status'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Reported By'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Assigned To'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.59}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Description'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Risk Category'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control ID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Compliance Test Comments'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.86}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Compliance Test Result'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Compliance Test Comments'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46125}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Test Date'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46125}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Test Date'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.28}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46125}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Test Date'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46125}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Test Plan'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46125}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Test Result'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46125}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Priority'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46125}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'External Source URL'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46125}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Entity Name'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.39875}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'External Source Date'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.39875}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'External Source URL'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.39875}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Assigned To'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.39875}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Test Plan'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.39875}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Test Date'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.39875}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Compliance Test Comments'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.39875}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Description'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.39875}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Description'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.64}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Compliance Test Result'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Compliance Standard'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.72}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Test Result'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Resolved Date'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue ID'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'External Source URL'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.44}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Entity Name'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.33}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'External Source URL'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'External Source Name'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'External Source Name'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'External Source URL'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.18}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5125}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'External Source Date'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.82}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5125}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Reported Date'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.52}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5125}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Test Result'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5125}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Compliance Standard'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5125}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Compliance Test Date'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5125}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control ID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5125}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Risk Description'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.91}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5125}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Frequency'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.72}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.572}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Test Result'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.572}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Resolved Date'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.572}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Description'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.85}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.572}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'External Source Name'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.572}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'External Source Name'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.568}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'External Source Comments'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.72}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.568}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'External Source Comments'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.73}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.568}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Reported Date'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.568}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Reported By'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.568}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Status'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.76}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.568}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Test Plan'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.568}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Compliance Test Date'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.568}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Compliance Test Plan'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.33}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.568}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Compliance Standard'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.568}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Test Comments'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.23}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.517143}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Test Plan'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.517143}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Reported By'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.52}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.517143}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Priority'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.16}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.517143}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Resolution Comments'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.88}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.517143}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Resolution Comments'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.517143}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Description'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.58}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.517143}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue Assigned To'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.52}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Issue ID'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.27}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.52}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Description'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.52}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Control Frequency'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.52}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Compliance Test Date'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.57}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.52}]->(context);
MATCH (context:DataContext {name: 'GRC'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Standards, Controls, Risks, Issues, Incidents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Risk Description'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'GRC', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.52}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DoctorID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.755}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PatientName'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.755}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MedicationID'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.22}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DoctorID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.92}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7475}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PatientName'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7475}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'VisitDate'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.33}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7475}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'VisitDate'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7475}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DoctorName'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.58}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.803333}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DoctorID'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.76}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.803333}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MedicationName'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.29}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.803333}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DoctorID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.49}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PatientID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.88}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.49}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProcedureID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.49}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PatientID'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.88}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.516667}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DoctorID'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.17}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.516667}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MedicationName'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.516667}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DoctorName'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.31}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.39}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DoctorName'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.91}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.485}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MedicationID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.485}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProcedureID'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.52}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.86}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PatientName'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.2}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PatientName'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.18}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'MedicationID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DoctorName'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.21}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DoctorID'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.92}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.605}]->(context);
MATCH (context:DataContext {name: 'Healthcare'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Patients, Doctors, Visits, Procedures, Medications'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'VisitDate'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Healthcare', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.605}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'location'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.23}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.76}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'name'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.76}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'occupation'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.44}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.462}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'post_id'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.462}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'post_id'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.462}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'relationship_status'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.12}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.462}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'relationship_status'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.462}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'age'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.12}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.601667}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'age'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.601667}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'age'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.59}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.601667}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'likes'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.28}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.601667}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'education'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.601667}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'gender'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.37}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.601667}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'age'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.635}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'relationship_status'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.58}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.635}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'timestamp'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.28}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.635}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'user_id'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.62}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.635}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'user_id'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.516}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'timestamp'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.516}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'relationship_status'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.516}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'education'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.516}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'name'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.516}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'post_id'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.694286}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'gender'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.694286}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'gender'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.694286}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'location'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.91}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.694286}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'interests'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.694286}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'relationship_status'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.21}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.694286}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'age'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.694286}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'age'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.425}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'content'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.425}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'comments'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.85}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.425}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'relationship_status'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.425}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'user_id'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.425}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'location'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.425}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'gender'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.425}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'education'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.98}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.425}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'gender'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.486667}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'interests'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.486667}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'interests'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.31}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.486667}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'post_id'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.77}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6225}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'relationship_status'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6225}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'timestamp'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.92}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6225}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'content'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6225}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'age'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.58}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'timestamp'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'interests'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'location'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.686667}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'occupation'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.686667}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'timestamp'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.686667}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'timestamp'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.468}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'timestamp'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.468}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'likes'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.64}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.468}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'gender'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.37}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.468}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'gender'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.468}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'gender'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'likes'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'location'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'occupation'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.95}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'relationship_status'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'user_id'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.433333}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'comments'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.58}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.433333}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'comments'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.37}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.433333}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'occupation'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.433333}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'gender'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.433333}]->(context);
MATCH (context:DataContext {name: 'Instagram'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Users, Posts, Comments, Likes, Messages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'education'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Instagram', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.433333}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Policy status'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.504}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Payment history'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.504}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Coverage end date'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.504}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Coverage start date'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.95}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.504}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Deductible amount'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.504}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Policy holder name'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.82}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Insured item value'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.82}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Insured item'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.58}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5275}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Insured item'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5275}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Insured item value'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5275}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Payment history'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5275}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Policy holder name'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.12}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Insured item value'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.66}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6125}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Deductible amount'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6125}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Coverage type'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.63}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6125}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Coverage type'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6125}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Deductible amount'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.92}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.52}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Insured item'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.52}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Premium amount'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.28}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.52}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Insured item value'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.39}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Insured item'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.77}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.535}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Premium amount'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.535}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Payment history'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.535}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Coverage type'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.535}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Coverage start date'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.61}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.535}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Coverage end date'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.76}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.535}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Coverage end date'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.11}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.738}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Coverage end date'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.29}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.738}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Coverage end date'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.738}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Policy holder name'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.738}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Policy number'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.738}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Payment history'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.235}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Claim history'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.16}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.235}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Coverage type'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.484286}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Deductible amount'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.484286}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Deductible amount'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.58}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.484286}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Policy holder name'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.484286}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Policy holder name'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.27}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.484286}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Insured item'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.484286}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Insured item value'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.484286}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Insured item'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.75}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.465}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Claim history'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.465}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Deductible amount'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.52}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.53}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Policy status'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.75}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.53}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Premium amount'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.67}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.53}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Policy number'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.17}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.295}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Policy holder name'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.93}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.295}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Deductible amount'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.295}]->(context);
MATCH (context:DataContext {name: 'Insurance Policy System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Policies, Claims, Customers, Agents'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Coverage start date'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Insurance Policy System', weight: 0.39}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.295}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.52}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.34}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ResolvedDate'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.34}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Summary'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.37}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.34}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Summary'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.27}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.743333}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectID'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.743333}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Priority'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.743333}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Lead'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.73}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.743333}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Lead'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.743333}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'LastModifiedDate'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.31}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.743333}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.656667}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CreatedDate'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.656667}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CreatedDate'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.656667}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CreatedDate'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.622}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Status'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.622}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Reporter'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.63}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.622}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Reporter'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.27}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.622}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Priority'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.59}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.622}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Email'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.395}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ResolvedDate'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.395}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CreatedDate'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.41}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.466667}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.466667}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Name'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.56}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.466667}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Name'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.585}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ResolvedDate'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.585}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Reporter'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.513333}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Name'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.513333}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'LastModifiedDate'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.513333}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Name'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Summary'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.62}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Status'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.56}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Name'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.33}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.56}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Priority'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.85}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.56}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Name'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.693333}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueID'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.693333}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ResolvedDate'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.693333}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Status'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.405}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Summary'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.405}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.405}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CreatedDate'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.405}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.31}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.405}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'IssueID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.405}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CreatedDate'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.54}]->(context);
MATCH (context:DataContext {name: 'Jira'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Issues, Projects, Users'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProjectID'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Jira', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.54}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.33}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.423333}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DeliveryDate'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.76}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.423333}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderDate'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.423333}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Destination'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.61}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ShipmentDate'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.61}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Status'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.73}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.36}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Status'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.36}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'WarehouseName'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.31}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.36}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderDate'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.98}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.36}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.36}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderDate'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.36}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.505}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.62}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.505}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'WarehouseName'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.434}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.434}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ShipmentDate'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.434}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Quantity'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.434}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.47}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.434}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TotalAmount'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.11}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.51}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.16}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.51}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderDate'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.51}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ShipmentDate'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.88}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'WarehouseName'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.86}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductID'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Destination'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.73}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductID'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.49}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'WarehouseID'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.95}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DeliveryDate'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DeliveryDate'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.21}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Status'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.86}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Quantity'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5525}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5525}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'WarehouseID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5525}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderDate'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.98}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5525}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.56}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6275}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'WarehouseName'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.41}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6275}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'TotalAmount'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6275}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ProductID'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6275}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderDate'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.61}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderID'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.61}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderDate'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6675}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Status'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6675}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'WarehouseName'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.26}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6675}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CustomerID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6675}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Quantity'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.91}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.568}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ShipmentDate'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.568}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'OrderDate'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.63}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.568}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.568}]->(context);
MATCH (context:DataContext {name: 'Logistics'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Shipments, Warehouses, Inventory, Orders, Tracking Information'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Destination'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Logistics', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.568}]->(context);
MATCH (context:DataContext {name: 'News Feed'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Article, Author, Date, Category, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tags'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'News Feed', weight: 0.66}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.78}]->(context);
MATCH (context:DataContext {name: 'News Feed'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Article, Author, Date, Category, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Date'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'News Feed', weight: 0.81}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.495}]->(context);
MATCH (context:DataContext {name: 'News Feed'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Article, Author, Date, Category, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'News Feed', weight: 0.33}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.495}]->(context);
MATCH (context:DataContext {name: 'News Feed'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Article, Author, Date, Category, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'News Feed', weight: 0.37}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4175}]->(context);
MATCH (context:DataContext {name: 'News Feed'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Article, Author, Date, Category, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Date'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'News Feed', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4175}]->(context);
MATCH (context:DataContext {name: 'News Feed'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Article, Author, Date, Category, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tags'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'News Feed', weight: 0.12}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4175}]->(context);
MATCH (context:DataContext {name: 'News Feed'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Article, Author, Date, Category, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tags'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'News Feed', weight: 0.37}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4175}]->(context);
MATCH (context:DataContext {name: 'News Feed'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Article, Author, Date, Category, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Date'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'News Feed', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.725}]->(context);
MATCH (context:DataContext {name: 'News Feed'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Article, Author, Date, Category, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'News Feed', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.725}]->(context);
MATCH (context:DataContext {name: 'News Feed'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Article, Author, Date, Category, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'News Feed', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.82}]->(context);
MATCH (context:DataContext {name: 'News Feed'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Article, Author, Date, Category, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'News Feed', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.82}]->(context);
MATCH (context:DataContext {name: 'News Feed'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Article, Author, Date, Category, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'News Feed', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.69}]->(context);
MATCH (context:DataContext {name: 'News Feed'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Article, Author, Date, Category, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Article'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'News Feed', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.69}]->(context);
MATCH (context:DataContext {name: 'News Feed'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Article, Author, Date, Category, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Article'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'News Feed', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.385}]->(context);
MATCH (context:DataContext {name: 'News Feed'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Article, Author, Date, Category, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Date'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'News Feed', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.385}]->(context);
MATCH (context:DataContext {name: 'News Feed'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Article, Author, Date, Category, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Date'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'News Feed', weight: 0.49}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.51}]->(context);
MATCH (context:DataContext {name: 'News Feed'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Article, Author, Date, Category, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tags'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'News Feed', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.1}]->(context);
MATCH (context:DataContext {name: 'News Feed'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Article, Author, Date, Category, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'News Feed', weight: 0.77}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.57}]->(context);
MATCH (context:DataContext {name: 'News Feed'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Article, Author, Date, Category, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'News Feed', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.57}]->(context);
MATCH (context:DataContext {name: 'News Feed'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Article, Author, Date, Category, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tags'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'News Feed', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.48}]->(context);
MATCH (context:DataContext {name: 'News Feed'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Article, Author, Date, Category, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'News Feed', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.92}]->(context);
MATCH (context:DataContext {name: 'News Feed'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Article, Author, Date, Category, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tags'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'News Feed', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.23}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.453333}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author name'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.37}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.453333}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Article ID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.22}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.453333}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment body'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.453333}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment body'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.59}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.453333}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment ID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.58}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.453333}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment ID'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.22}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.548333}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment ID'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.548333}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Publication date'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.18}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.548333}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Article ID'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.548333}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.548333}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Title'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.23}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.548333}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Title'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.26}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6725}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Title'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6725}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Date'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6725}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category name'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.73}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6725}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.49}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author email'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.49}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author ID'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.56}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.49}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment date'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.49}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment body'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5975}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author bio'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5975}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Title'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5975}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Title'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5975}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Title'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6675}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author ID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6675}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category name'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.61}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6675}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category ID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.57}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6675}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author email'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.39}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.57}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author name'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.57}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Article ID'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.57}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment body'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.47}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.57}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment date'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6625}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment ID'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6625}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category name'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6625}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Title'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6625}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category name'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.312}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.312}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author ID'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.312}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author bio'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.312}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author name'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.12}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.312}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category name'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.81}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.54}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment date'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.54}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment date'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.69}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.69}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Article ID'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.69}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Date'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.69}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tags'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.52}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Body'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.67}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author name'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.27}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment body'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment ID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.73}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.455}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author name'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.455}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author name'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.601111}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Body'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.601111}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category ID'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.601111}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment date'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.27}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.601111}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment date'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.28}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.601111}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment body'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.601111}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Content'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.23}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.601111}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Title'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.601111}]->(context);
MATCH (context:DataContext {name: 'Personal Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Date'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Personal Blog', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.601111}]->(context);
MATCH (context:DataContext {name: 'Radiation Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Location, Radiation level, Timestamp'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Timestamp'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Radiation Monitoring', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.77}]->(context);
MATCH (context:DataContext {name: 'Radiation Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Location, Radiation level, Timestamp'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Radiation Monitoring', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.77}]->(context);
MATCH (context:DataContext {name: 'Radiation Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Location, Radiation level, Timestamp'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Radiation Monitoring', weight: 0.54}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.77}]->(context);
MATCH (context:DataContext {name: 'Radiation Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Location, Radiation level, Timestamp'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Timestamp'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Radiation Monitoring', weight: 0.36}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.19}]->(context);
MATCH (context:DataContext {name: 'Radiation Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Location, Radiation level, Timestamp'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Radiation Monitoring', weight: 0.75}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.77}]->(context);
MATCH (context:DataContext {name: 'Radiation Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Location, Radiation level, Timestamp'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Radiation Monitoring', weight: 0.52}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.69}]->(context);
MATCH (context:DataContext {name: 'Radiation Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Location, Radiation level, Timestamp'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Radiation Monitoring', weight: 0.16}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.69}]->(context);
MATCH (context:DataContext {name: 'Radiation Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Location, Radiation level, Timestamp'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Radiation Monitoring', weight: 0.33}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.63}]->(context);
MATCH (context:DataContext {name: 'Radiation Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Location, Radiation level, Timestamp'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Radiation level'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Radiation Monitoring', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.63}]->(context);
MATCH (context:DataContext {name: 'Radiation Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Location, Radiation level, Timestamp'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Timestamp'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Radiation Monitoring', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.1}]->(context);
MATCH (context:DataContext {name: 'Radiation Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Location, Radiation level, Timestamp'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Radiation level'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Radiation Monitoring', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.96}]->(context);
MATCH (context:DataContext {name: 'Radiation Monitoring'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Location, Radiation level, Timestamp'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Radiation Monitoring', weight: 0.27}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.15}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Website'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6225}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Funding Source'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6225}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Funding Source'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6225}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Affiliation'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.63}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.6225}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Publication Year'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.512}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Email'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.512}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'End Date'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.73}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.512}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'End Date'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.512}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Website'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.512}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Keywords'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.397143}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Research Interests'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.397143}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Research Interests'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.58}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.397143}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Title'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.26}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.397143}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Abstract'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.397143}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Abstract'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.63}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.397143}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Contact Person'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.397143}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Contact Person'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.59}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5475}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Authors'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5475}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Publication Year'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.81}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5475}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'End Date'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5475}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Principal Investigator'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.86}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3675}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Research Interests'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.86}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3675}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Start Date'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3675}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Description'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3675}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Description'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.83}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Research Interests'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.66}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.83}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Name'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.83}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Name'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.49}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7225}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Funding Source'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.27}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7225}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Publication Year'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7225}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Authors'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.22}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7225}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Affiliation'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565556}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Affiliation'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565556}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Publication Year'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565556}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'End Date'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565556}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Email'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.34}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565556}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Website'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.33}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565556}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Website'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.81}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565556}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Name'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.92}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565556}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Phone'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.565556}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Phone'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.515}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Authors'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.515}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Abstract'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.64875}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Description'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.64875}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Description'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.64875}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Phone'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.64875}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Principal Investigator'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.64875}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Name'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.66}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.64875}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Name'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.64875}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Website'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.64875}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Authors'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.31}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.73}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Contact Person'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.73}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Abstract'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.93}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.572}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Abstract'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.572}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Description'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.572}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Publication Year'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.572}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'End Date'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.95}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.572}]->(context);
MATCH (context:DataContext {name: 'Research Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Research papers, Projects, Researchers, Funding sources'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Contact Person'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Research Information System', weight: 0.63}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.66}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Extracurricular activities'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.76}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'GPA'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.76}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Grade level'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.54}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.76}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Grade level'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.42}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.76}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.488333}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Extracurricular activities'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.86}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.488333}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Extracurricular activities'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.488333}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Last name'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.488333}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Parent/guardian contact information'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.488333}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Student ID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.488333}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Extracurricular activities'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.44}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.84}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.29}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.84}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Attendance record'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.99}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Parent/guardian contact information'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.37}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.52}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Courses taken'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.33}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.52}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Student ID'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.52}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Date of birth'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.52}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Attendance record'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.56}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Extracurricular activities'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.85}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.56}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Extracurricular activities'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.81}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.56}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Last name'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.41}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Parent/guardian contact information'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.76}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.41}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Attendance record'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.41}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Courses taken'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.41}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Student ID'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.18}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.56}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Student ID'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.66}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.56}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'First name'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.59}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.56}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'First name'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.56}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Parent/guardian contact information'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.82}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.255}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Date of birth'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.73}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.255}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'First name'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.9}]->(context);
MATCH (context:DataContext {name: 'School Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Teachers, Courses, Classes'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Extracurricular activities'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'School Information System', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.9}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Email'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.638}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Dislikes'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.12}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.638}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Occupation'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.638}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Username'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.638}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommentID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.638}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommentID'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.661667}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Country'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.661667}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DatePosted'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.661667}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DatePosted'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.661667}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Occupation'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.661667}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Password'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.57}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.661667}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Occupation'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Education'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.12}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Education'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.72}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Likes'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.81}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Username'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'UserID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.46}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DateCommented'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.515}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DateCommented'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.49}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.515}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Bio'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.515}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Dislikes'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.515}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Occupation'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.21}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.515}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Password'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.515}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PostID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.675}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommentID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.92}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.675}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Content'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.31}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.675}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DatePosted'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.675}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DateOfBirth'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.41}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.408}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommentID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.76}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.408}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Dislikes'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.58}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.408}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Dislikes'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.408}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Likes'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.408}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.18}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.462}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Password'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.462}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Content'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.462}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DatePosted'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.462}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DatePosted'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.462}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Content'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.406667}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.406667}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.86}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.406667}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Dislikes'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.98}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.474}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Likes'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.82}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.474}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Password'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.474}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DateCommented'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.11}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.474}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Username'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.75}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.474}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Username'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.61}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.545714}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommentID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.57}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.545714}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommentID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.545714}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CommentID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.545714}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Country'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.36}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.545714}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Password'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.545714}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PostID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.63}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.545714}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Occupation'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.26}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Occupation'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.26}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Password'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.82}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.44}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Password'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.44}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PostID'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.37}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.44}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Education'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.44}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Gender'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.92}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.44}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DatePosted'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.44}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Username'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.705}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PostID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.705}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Occupation'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.225}]->(context);
MATCH (context:DataContext {name: 'Social Media'})-[:HAS_SCHEMA]->(sch:Schema {name: 'User Profiles, Posts, Comments'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Likes'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Social Media', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.225}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Price'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.61}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Warehouse Name'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.91}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.61}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Delivery Date'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.61}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Supplier ID'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.86}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.328}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Quantity'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.328}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'SKU'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.328}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Product Name'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.77}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.328}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Product Description'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.328}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Product Description'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.85}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.51625}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Product ID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.51625}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Price'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.51625}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Product ID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.51625}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Shipping Address'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.51625}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Quantity'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.12}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.51625}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Transaction ID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.64}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.51625}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tracking Number'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.95}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.51625}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tracking Number'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Supplier Name'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.24}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Shipping Address'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Customer ID'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Customer ID'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Product Name'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.92}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Order Date'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Price'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.21}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.736667}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Product ID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.736667}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Shipping Address'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.41}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.736667}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Customer Name'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.485}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Product Description'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.17}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.485}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Price'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.75}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.57}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Price'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.57}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Customer ID'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.57}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Product Name'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.57}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Shipping Address'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.88}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.45}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'SKU'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.45}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'SKU'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.45}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Supplier ID'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.77}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.45}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Transaction ID'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.45}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Supplier ID'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.67}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.803333}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Supplier ID'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.803333}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Product Name'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.47}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.803333}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Product Name'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.17}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.498}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Carrier'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.498}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Quantity'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.13}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.498}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Warehouse ID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.85}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.498}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Product ID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.498}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Price'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.516667}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Customer Name'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.516667}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Customer Name'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.516667}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Delivery Date'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.516667}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Delivery Date'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.516667}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Carrier'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.516667}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Delivery Date'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.33}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.55}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Customer Name'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.11}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.55}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Warehouse ID'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.55}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Quantity'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.58}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.55}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Quantity'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.54}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.55}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tracking Number'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.55}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Product Description'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.55}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Price'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.55}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Warehouse Name'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.65}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Delivery Date'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.65}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Carrier'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.65}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Product Name'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.65}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Delivery Date'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.466667}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Customer ID'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.466667}]->(context);
MATCH (context:DataContext {name: 'Supply Chain'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Orders, Inventory, Suppliers, Customers'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tracking Number'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Supply Chain', weight: 0.98}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.466667}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment ID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.614}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment body'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.93}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.614}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category ID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.614}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author bio'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.86}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.614}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Article ID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.614}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment body'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.545}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Date'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.58}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.545}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Date'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.37}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.562857}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Date'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.562857}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Title'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.562857}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tags'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.562857}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment date'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.562857}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment ID'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.562857}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author name'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.562857}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category name'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.65}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.65}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.65}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment date'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.65}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Date'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.54}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.65}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Date'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.324}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment ID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.324}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Content'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.75}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.324}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Publication date'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.324}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category ID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.324}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author name'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.333333}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Publication date'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.333333}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Date'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.33}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.333333}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Date'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.722}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Content'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.75}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.722}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment date'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.722}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment body'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.57}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.722}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author email'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.722}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author bio'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.12}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3075}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category name'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3075}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Body'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.63}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3075}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Article ID'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.49}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3075}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author email'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.473333}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author ID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.473333}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment date'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.473333}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment ID'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.695556}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment ID'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.41}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.695556}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author email'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.66}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.695556}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.62}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.695556}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.695556}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category ID'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.81}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.695556}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category name'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.62}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.695556}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Date'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.18}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.695556}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tags'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.695556}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category ID'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.49}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.42}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Article ID'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.42}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment body'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.42}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment ID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.78}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Content'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.36}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.78}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author ID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.78}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author email'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.78}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Date'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.91}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.78}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Date'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.28}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.618}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Author ID'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.618}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category name'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.618}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category name'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.618}]->(context);
MATCH (context:DataContext {name: 'Technical Blog'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Articles, Authors, Comments, Categories'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Comment date'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Technical Blog', weight: 0.64}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.618}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ArrivalTime'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.595556}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ActivityDescription'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.22}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.595556}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ActivityLocation'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.595556}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DepartureLocation'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.595556}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PackageDescription'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.17}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.595556}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PackageID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.595556}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelRating'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.595556}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelPrice'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.595556}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'FlightID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.595556}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelName'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.64}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.541818}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PackagePrice'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.98}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.541818}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DepartureLocation'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.12}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.541818}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DepartureTime'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.541818}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'RentalPrice'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.27}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.541818}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'RentalID'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.541818}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ActivityDescription'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.541818}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ArrivalTime'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.541818}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ArrivalTime'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.72}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.541818}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CarType'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.63}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.541818}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CarType'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.541818}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ArrivalTime'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.652222}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ArrivalTime'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.95}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.652222}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ArrivalLocation'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.33}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.652222}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ArrivalLocation'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.41}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.652222}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ActivityName'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.77}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.652222}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DepartureTime'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.652222}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PackagePrice'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.652222}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelLocation'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.652222}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelLocation'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.652222}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelID'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.582727}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'FlightPrice'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.39}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.582727}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'FlightID'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.582727}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelRating'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.582727}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PackagePrice'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.582727}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DepartureLocation'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.29}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.582727}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'RentalEndDate'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.582727}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ActivityLocation'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.65}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.582727}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ActivityLocation'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.86}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.582727}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ArrivalLocation'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.76}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.582727}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'CarType'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.582727}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ActivityID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.535556}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ActivityName'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.77}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.535556}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ActivityPrice'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.12}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.535556}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'RentalEndDate'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.41}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.535556}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'RentalLocation'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.535556}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'RentalStartDate'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.535556}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'FlightDuration'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.535556}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.86}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.535556}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.43}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.535556}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'FlightPrice'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.741667}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelPrice'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.741667}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PackageName'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.741667}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PackageName'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.741667}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DepartureLocation'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.741667}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ArrivalTime'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.741667}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ActivityPrice'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.11}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.61}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ActivityLocation'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.61}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'RentalID'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.76}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.61}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PackagePrice'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.47}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.61}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PackageDescription'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.61}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'FlightID'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.61}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelLocation'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.57}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.61}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelID'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.64}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.467}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelID'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.467}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'RentalEndDate'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.467}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DepartureLocation'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.76}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.467}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DepartureTime'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.467}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ActivityLocation'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.17}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.467}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ActivityDescription'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.467}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ActivityName'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.91}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.467}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ActivityLocation'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.467}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ArrivalLocation'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.467}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ArrivalLocation'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelName'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.69}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelPrice'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.22}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PackageDescription'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.59}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PackageDescription'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.81}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.604}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PackagePrice'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.17}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.604}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ActivityLocation'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.604}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'DepartureLocation'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.604}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'RentalID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.604}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ActivityName'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.75}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.50375}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ArrivalLocation'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.50375}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelPrice'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.50375}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelRating'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.50375}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelRating'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.73}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.50375}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelID'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.50375}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelLocation'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.98}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.50375}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'FlightPrice'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.50375}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelName'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.655}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ArrivalLocation'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.8}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.655}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelName'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.591667}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelLocation'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.22}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.591667}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelLocation'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.12}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.591667}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelRating'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.66}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.591667}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PackageID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.12}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.591667}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PackageDescription'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.591667}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PackageDescription'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.53875}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'PackageDescription'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.53875}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'HotelPrice'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.53875}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ArrivalTime'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.53875}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ArrivalTime'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.92}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.53875}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'ActivityID'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.53875}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'RentalID'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.53875}]->(context);
MATCH (context:DataContext {name: 'Travel'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Hotels, Flights, Car Rentals, Activities, Tour Packages'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'RentalPrice'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Travel', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.53875}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Retweets'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5775}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'User name'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.17}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5775}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'User name'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5775}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Favorites'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.12}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5775}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'User name'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.88}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'User ID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5225}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tweet date/time'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5225}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tweet text'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.15}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5225}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Mentioned users'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.36}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5225}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Hashtags'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.92}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7325}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tweet date/time'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7325}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tweet text'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.47}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7325}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tweet text'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.81}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.7325}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tweet text'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.93}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.94}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Mentioned users'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.36}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Mentioned users'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.36}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Hashtags'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.28}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tweet date/time'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.405}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tweet ID'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.405}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tweet date/time'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.33}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.38}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tweet date/time'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.13}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.38}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Favorites'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.6}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.38}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Favorites'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.375}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tweet date/time'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.375}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tweet text'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.375}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tweet text'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.73}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.375}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'User name'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.75}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tweet text'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.75}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Hashtags'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.91}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.75}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Hashtags'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.31}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.37}]->(context);
MATCH (context:DataContext {name: 'Twitter'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Tweets'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Favorites'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Twitter', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.37}]->(context);
MATCH (context:DataContext {name: 'Weather Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Precipitation, Wind Speed, Wind Direction'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Temperature'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Weather Data', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.73}]->(context);
MATCH (context:DataContext {name: 'Weather Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Precipitation, Wind Speed, Wind Direction'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Wind Speed'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Weather Data', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.473333}]->(context);
MATCH (context:DataContext {name: 'Weather Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Precipitation, Wind Speed, Wind Direction'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Wind Speed'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Weather Data', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.473333}]->(context);
MATCH (context:DataContext {name: 'Weather Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Precipitation, Wind Speed, Wind Direction'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Wind Speed'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Weather Data', weight: 0.32}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.473333}]->(context);
MATCH (context:DataContext {name: 'Weather Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Precipitation, Wind Speed, Wind Direction'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Precipitation'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Weather Data', weight: 0.19}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.58}]->(context);
MATCH (context:DataContext {name: 'Weather Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Precipitation, Wind Speed, Wind Direction'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Wind Direction'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Weather Data', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.87}]->(context);
MATCH (context:DataContext {name: 'Weather Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Precipitation, Wind Speed, Wind Direction'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Wind Direction'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Weather Data', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.606667}]->(context);
MATCH (context:DataContext {name: 'Weather Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Precipitation, Wind Speed, Wind Direction'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Wind Speed'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Weather Data', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.606667}]->(context);
MATCH (context:DataContext {name: 'Weather Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Precipitation, Wind Speed, Wind Direction'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Wind Speed'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Weather Data', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.606667}]->(context);
MATCH (context:DataContext {name: 'Weather Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Precipitation, Wind Speed, Wind Direction'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Precipitation'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Weather Data', weight: 0.92}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.38}]->(context);
MATCH (context:DataContext {name: 'Weather Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Precipitation, Wind Speed, Wind Direction'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Temperature'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Weather Data', weight: 0.92}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.38}]->(context);
MATCH (context:DataContext {name: 'Weather Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Precipitation, Wind Speed, Wind Direction'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Humidity'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Weather Data', weight: 0.17}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.15}]->(context);
MATCH (context:DataContext {name: 'Weather Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Precipitation, Wind Speed, Wind Direction'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Temperature'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Weather Data', weight: 0.72}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.77}]->(context);
MATCH (context:DataContext {name: 'Weather Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Precipitation, Wind Speed, Wind Direction'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Humidity'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Weather Data', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.495}]->(context);
MATCH (context:DataContext {name: 'Weather Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Precipitation, Wind Speed, Wind Direction'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Wind Speed'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Weather Data', weight: 0.57}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.495}]->(context);
MATCH (context:DataContext {name: 'Weather Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Precipitation, Wind Speed, Wind Direction'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Humidity'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Weather Data', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.49}]->(context);
MATCH (context:DataContext {name: 'Weather Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Precipitation, Wind Speed, Wind Direction'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Humidity'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Weather Data', weight: 0.45}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.49}]->(context);
MATCH (context:DataContext {name: 'Weather Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Precipitation, Wind Speed, Wind Direction'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Humidity'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Weather Data', weight: 0.28}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.735}]->(context);
MATCH (context:DataContext {name: 'Weather Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Precipitation, Wind Speed, Wind Direction'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Humidity'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Weather Data', weight: 0.71}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.735}]->(context);
MATCH (context:DataContext {name: 'Weather Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Precipitation, Wind Speed, Wind Direction'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Temperature'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Weather Data', weight: 0.61}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.77}]->(context);
MATCH (context:DataContext {name: 'Weather Data'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Temperature, Humidity, Precipitation, Wind Speed, Wind Direction'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Wind Direction'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Weather Data', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.63}]->(context);
MATCH (context:DataContext {name: 'WhatsApp'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Messages, Calls, Statuses, Contacts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Timestamp'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'WhatsApp', weight: 0.51}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62}]->(context);
MATCH (context:DataContext {name: 'WhatsApp'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Messages, Calls, Statuses, Contacts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Recipient'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'WhatsApp', weight: 0.12}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.87}]->(context);
MATCH (context:DataContext {name: 'WhatsApp'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Messages, Calls, Statuses, Contacts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Recipient'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'WhatsApp', weight: 0.78}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.61}]->(context);
MATCH (context:DataContext {name: 'WhatsApp'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Messages, Calls, Statuses, Contacts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Conversation ID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'WhatsApp', weight: 0.62}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.61}]->(context);
MATCH (context:DataContext {name: 'WhatsApp'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Messages, Calls, Statuses, Contacts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Conversation ID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'WhatsApp', weight: 0.49}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.635}]->(context);
MATCH (context:DataContext {name: 'WhatsApp'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Messages, Calls, Statuses, Contacts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Message'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'WhatsApp', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.635}]->(context);
MATCH (context:DataContext {name: 'WhatsApp'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Messages, Calls, Statuses, Contacts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Message'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'WhatsApp', weight: 0.41}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.57}]->(context);
MATCH (context:DataContext {name: 'WhatsApp'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Messages, Calls, Statuses, Contacts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Message'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'WhatsApp', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.93}]->(context);
MATCH (context:DataContext {name: 'WhatsApp'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Messages, Calls, Statuses, Contacts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Message'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'WhatsApp', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.74}]->(context);
MATCH (context:DataContext {name: 'WhatsApp'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Messages, Calls, Statuses, Contacts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Message'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'WhatsApp', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.9}]->(context);
MATCH (context:DataContext {name: 'WhatsApp'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Messages, Calls, Statuses, Contacts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Timestamp'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'WhatsApp', weight: 0.58}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.3}]->(context);
MATCH (context:DataContext {name: 'WhatsApp'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Messages, Calls, Statuses, Contacts'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Message'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'WhatsApp', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.31}]->(context);

MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Address'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.61}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.54}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Address'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.12}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.54}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Brand'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.64}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Brand'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.81}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.303333}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Brand'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.27}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62875}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Category'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.836667}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Customer ID'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.63}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.303333}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Customer ID'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.23}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.813333}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Description'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.22}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.571667}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Email'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.55}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.412}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Email'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62875}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Email'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.78}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Inventory Quantity'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.836667}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Last Update Date'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.303333}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.571667}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62875}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.64}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.67}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.546667}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Location'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.546667}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Loyalty Points'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.693333}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Loyalty Points'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.16}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.546667}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Name'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62875}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Name'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.57}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.546667}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Order Date'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.23}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.412}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Order Date'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.64}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Order Date'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.96}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.54}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Order ID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.86}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62875}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Payment Information'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.546667}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Price'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.59}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.54}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Product ID'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.836667}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Product ID'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.57}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.693333}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Product ID'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.63}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.546667}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Products'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.81}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.67}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Quantity'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.33}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.8}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Quantity'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.61}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62875}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Sale Date'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.571667}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Sale Date'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.67}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Sale Date'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.813333}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Sale ID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.4}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.571667}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Sale ID'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.412}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Sale ID'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.44}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.67}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Sale ID'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.77}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.55}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Sale Price'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.76}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.571667}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Sale Price'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.412}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Sale Price'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.693333}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Status'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.76}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.571667}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Status'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.412}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Status'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.92}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62875}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Supplier ID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.8}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Supplier ID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.48}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.62875}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Supplier ID'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.67}]->(context);
MATCH (context:DataContext {name: 'Retail'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Products, Customers, Orders, Sales, Inventory'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Total Price'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Retail', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.813333}]->(context);
MATCH (context:DataContext {name: 'Stack Overflow'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Questions, Answers, Comments, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Answer ID'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Stack Overflow', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.77}]->(context);
MATCH (context:DataContext {name: 'Stack Overflow'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Questions, Answers, Comments, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Answer ID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Stack Overflow', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.235}]->(context);
MATCH (context:DataContext {name: 'Stack Overflow'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Questions, Answers, Comments, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Answer ID'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Stack Overflow', weight: 0.25}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.445}]->(context);
MATCH (context:DataContext {name: 'Stack Overflow'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Questions, Answers, Comments, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Creation date'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Stack Overflow', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.29}]->(context);
MATCH (context:DataContext {name: 'Stack Overflow'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Questions, Answers, Comments, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Creation date'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Stack Overflow', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.49}]->(context);
MATCH (context:DataContext {name: 'Stack Overflow'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Questions, Answers, Comments, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Last activity date'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Stack Overflow', weight: 0.89}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.5}]->(context);
MATCH (context:DataContext {name: 'Stack Overflow'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Questions, Answers, Comments, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Last activity date'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Stack Overflow', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.27}]->(context);
MATCH (context:DataContext {name: 'Stack Overflow'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Questions, Answers, Comments, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Question ID'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Stack Overflow', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.54}]->(context);
MATCH (context:DataContext {name: 'Stack Overflow'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Questions, Answers, Comments, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tag ID'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Stack Overflow', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.235}]->(context);
MATCH (context:DataContext {name: 'Stack Overflow'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Questions, Answers, Comments, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Tags'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Stack Overflow', weight: 0.81}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.83}]->(context);
MATCH (context:DataContext {name: 'Stack Overflow'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Questions, Answers, Comments, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Title'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Stack Overflow', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.77}]->(context);
MATCH (context:DataContext {name: 'Stack Overflow'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Questions, Answers, Comments, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Title'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Stack Overflow', weight: 0.3}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.49}]->(context);
MATCH (context:DataContext {name: 'Stack Overflow'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Questions, Answers, Comments, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'User ID'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Stack Overflow', weight: 0.91}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.49}]->(context);
MATCH (context:DataContext {name: 'Stack Overflow'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Questions, Answers, Comments, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'User ID'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Stack Overflow', weight: 0.61}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.445}]->(context);
MATCH (context:DataContext {name: 'Stack Overflow'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Questions, Answers, Comments, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Views'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Stack Overflow', weight: 0.57}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.53}]->(context);
MATCH (context:DataContext {name: 'Stack Overflow'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Questions, Answers, Comments, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Votes'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Stack Overflow', weight: 0.97}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.54}]->(context);
MATCH (context:DataContext {name: 'Stack Overflow'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Questions, Answers, Comments, Tags'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Votes'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'Stack Overflow', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.79}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Address'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.1}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.654}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Contact Information'}),  (qd:QualityDimension {name: 'Security'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.35}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.94}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Course Code'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.29}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.733333}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Course ID'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.44}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.72}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Course ID'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.85}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.654}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Course Name'}),  (qd:QualityDimension {name: 'Availability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.63}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.87}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Date of Birth'}),  (qd:QualityDimension {name: 'Accuracy'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.61}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.96}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Date of Birth'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.655}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Date of Birth'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Data Inconsistency'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.99}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.615}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Enrollment Date'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.28}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Enrollment Date'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.9}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.654}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Enrollment ID'}),  (qd:QualityDimension {name: 'Usability'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.42}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.79}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Enrollment Limit'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.57}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4875}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Enrollment Limit'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.87}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.72}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Faculty ID'}),  (qd:QualityDimension {name: 'Interpretability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.94}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.615}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'First Name'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.84}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.733333}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'First Name'}),  (qd:QualityDimension {name: 'Consistency'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.68}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.733333}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'GPA'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.7}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.72}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Grade'}),  (qd:QualityDimension {name: 'Correctness'}),  (bm:BaseMeasure {name: 'Data Entry Error'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.14}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.72}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Hire Date'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Cross-Field Validation'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.5}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.654}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Hire Date'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Data Comparison'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.2}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.72}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Instructor'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.79}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4875}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Last Name'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Null Count'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.59}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4875}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Last Name'}),  (qd:QualityDimension {name: 'Completeness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.53}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.28}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Major'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.46}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.44}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Major'}),  (qd:QualityDimension {name: 'Understandability'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.38}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.72}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Minor'}),  (qd:QualityDimension {name: 'Accessibility'}),  (bm:BaseMeasure {name: 'Format Validity'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.29}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.4875}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Status'}),  (qd:QualityDimension {name: 'Currency'}),  (bm:BaseMeasure {name: 'Outliers Detection'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.83}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.655}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Student ID'}),  (qd:QualityDimension {name: 'Relevance'}),  (bm:BaseMeasure {name: 'Range Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.66}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.2}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Student ID'}),  (qd:QualityDimension {name: 'Timeliness'}),  (bm:BaseMeasure {name: 'Missing Values'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.91}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.44}]->(context);
MATCH (context:DataContext {name: 'University Information System'})-[:HAS_SCHEMA]->(sch:Schema {name: 'Students, Faculty, Courses, Enrollment'})-[:HAS_ATTRIBUTE]->(att:Attribute {name: 'Student ID'}),  (qd:QualityDimension {name: 'Traceability'}),  (bm:BaseMeasure {name: 'Duplication Check'})  MERGE (att)-[:HAS_BASEMEASURE]->(bm) MERGE (bm)-[:CALCULATES {name: 'University Information System', weight: 0.74}]->(qd) MERGE  (qd)-[:RELATED_TO {weight: 0.654}]->(context);
